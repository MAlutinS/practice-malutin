services:
  database:
    image: postgres
    container_name: postgres_db
    restart: unless-stopped
    shm_size: 128mb
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  backoffice:
    build: ./backoffice
    container_name: strapi_backoffice
    restart: unless-stopped
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: database
      DATABASE_PORT: ${POSTGRES_PORT}
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USERNAME: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      NODE_ENV: production
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backoffice:/srv/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1337"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app_network

  frontoffice:
    build: ./frontoffice
    container_name: astro_frontoffice
    restart: unless-stopped
    volumes:
      - ./frontoffice:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4321"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app_network

  balancer:
    image: haproxy
    container_name: haproxy_balancer
    restart: unless-stopped
    ports:
      - "80:80"
      - "1936:1936"
    volumes:
      - ./balancer/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - backoffice
      - frontoffice
    healthcheck:
      test: ["CMD", "haproxy", "-c", "-f", "/usr/local/etc/haproxy/haproxy.cfg"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: